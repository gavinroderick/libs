syntax = "proto3";

package io.restorecommerce.fulfillment;

import "google/protobuf/any.proto";
import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";

/**
Microservice definition.
*/
service Service {
  /**
  Returns a list of shipment IDs.
  */
  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (FulfillmentResponseList);

  /**
  Creates but does not execute fulfillment orders
  */
  rpc Create (FulfillmentRequestList) returns (FulfillmentResponseList);

  /**
  Updates but does not execute fulfillment orders
  */
  rpc Update (FulfillmentRequestList) returns (FulfillmentResponseList);

  /**
  Upserts but does not execute fulfillment orders
  */
  rpc Upsert (FulfillmentRequestList) returns (FulfillmentResponseList);

  /**
  Executes and Upserts fulfillment orders
  */
  rpc Order (FulfillmentRequestList) returns (FulfillmentResponseList);

  /**
  Track a batch of fulfillment orders
  */
  rpc Track (TrackingRequestList) returns (TrackingResultList);

  /**
  Cancel a batch of fulfillment orders
  */
  rpc Cancel (CancelRequestList) returns (CancelResultList);

  /**
  Delete a batch of fulfillments from the database
  */
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
}

enum AddressType {
  Standard = 0;
  DHL_Packstation = 1;
  DHL_Postfiliale = 2;
  //UPS_Whatever
}

enum LabelType {
  Default = 0;
  URL = 1;
  PDF = 2;
  Image = 3;
}

enum State {
  Incomplete = 0;
  Ordered = 1;
  Processing = 2;
  Done=3;
  Cancelled = 4;
  Failed = 5;
}

message Origin {
  string country = 1;
  string iso_code = 2;
}

message Contact {
  string name = 1;
  string email = 2;
  string phone = 3;
}

message Address {
  AddressType address_type = 1;
  repeated string name = 2;
  string street = 3;
  string number = 4;
  string addition = 5;
  string zip = 6;
  string city = 7;
  Origin origin = 8;
  Contact contact = 9;
}

message Parcel {
  float weight = 1;
  float width = 2;
  float length = 3;
  float height = 4;
}

message Order {
  string uks_id = 1; //id from external services for reference
  repeated Parcel parcels = 4;
  Address sender = 6;
  Address receiver = 7;
  string notify = 8;
}

message Label {
  LabelType type = 1;
  string data = 2; //Could be an URL, base64 or bytes of i.e. a PDF or PNG...
}

message Event {
  io.restorecommerce.status.Status status = 1;
  string timestamp = 2;
  string location = 3;
  google.protobuf.Any details = 4;
}

message FulfillmentRequest {
  string id = 1;
  string courier_id = 2;
  string product_id = 3;
  Order order = 4;
  io.restorecommerce.meta.Meta meta = 5;
}

message FulfillmentRequestList {
  repeated FulfillmentRequest items = 1;
  uint32 total_count = 2;
  io.restorecommerce.auth.Subject subject = 3;
}

/**
This is the message how it get stored to the database
*/
message Fulfillment {
  string id = 1;
  string courier_id = 2;
  string product_id = 3;
  Order order = 4;
  io.restorecommerce.meta.Meta meta = 5;
  string shipment_id = 6; //filled on Order
  Label label = 7; //filled on Order
  State state = 8; //update by Track
  io.restorecommerce.status.Status status = 9; //API status
}

message FulfillmentResponse {
  Fulfillment payload = 1;
  io.restorecommerce.status.Status status = 2;
}

message FulfillmentResponseList {
  repeated FulfillmentResponse items = 1;
  uint32 total_count = 2;
  io.restorecommerce.status.OperationStatus operation_status = 3;
}

message TrackingRequest {
  string order_id = 1;
  google.protobuf.Any options = 2;
}

message TrackingRequestList {
  repeated TrackingRequest items = 1;
  io.restorecommerce.auth.Subject subject = 2;
}

message Tracking {
  string fulfillment_id = 1;
  repeated Event events = 2;
  google.protobuf.Any details = 3;
  io.restorecommerce.status.Status status = 4;
}

message TrackingResultList {
  repeated Tracking items = 1;
  io.restorecommerce.status.OperationStatus operation_status = 2;
}

message CancelRequestList {
  repeated string ids = 1;
  io.restorecommerce.auth.Subject subject = 2;
}

message CancelResultList {
  repeated io.restorecommerce.status.Status items = 1;
  io.restorecommerce.status.OperationStatus operation_status = 2;
}