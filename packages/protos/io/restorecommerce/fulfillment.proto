syntax = "proto3";

package io.restorecommerce.fulfillment;

import "google/protobuf/any.proto";
import "io/restorecommerce/resource_base.proto";
import "io/restorecommerce/auth.proto";
import "io/restorecommerce/status.proto";
import "io/restorecommerce/fulfillment_courier";
import "io/restorecommerce/fulfillment_product";
import "io/restorecommerce/attribute";

/**
Microservice definition.
*/
service Service {
  /**
  Returns a list of shipment IDs.
  */
  rpc Read (io.restorecommerce.resourcebase.ReadRequest) returns (FulfillmentResults);

  /**
  Creates but does not execute a fulfillment order
  */
  rpc Create (FulfillmentOrderList) returns (FulfillmentResults);

  /**
  Updates but does not executes a fulfillment order
  */
  rpc Update (FulfillmentResults) returns (FulfillmentResults);

  /**
  Upserts but does not executes a fulfillment order
  */
  rpc Upsert (FulfillmentResults) returns (FulfillmentResults);

  /**
  Executes and Upserts a fulfillment order
  */
  rpc Order (FulfillmentOrderBatchQuery) returns (FulfillmentResults);

  /**
  Track a batch of fulfillment orders
  */
  rpc Track (TrackingBatchQuery) returns (TrackingResults);

  /**
  Cancel a batch of fulfillment orders
  */
  rpc Cancel (CancelQuery) returns (CancelResults);

  /**
  Delete a batch of fulfillments from the database
  */
  rpc Delete (io.restorecommerce.resourcebase.DeleteRequest) returns (io.restorecommerce.resourcebase.DeleteResponse);
}

enum AddressType {
  Standard = 0;
  DHL_Packstation = 1;
  DHL_Postfiliale = 2;
  //UPS_Whatever
}

enum LabelTypes {
  Default = 0;
  URL = 1;
  PDF = 2;
  Image = 3;
}

enum State {
  Incomplete = 0;
  Ordered = 1;
  Prozessing = 2;
  Done=3;
  Canceled = 4;
  Failed = 5;
}

message Origin {
  string country = 1;
  string iso_code = 2;
}

message Contact {
  string name = 1;
  string email = 2;
  string phone = 3;
}

message Address {
  AddressType address_type = 1;
  repeated string name = 2;
  string street = 3;
  string number = 4;
  string addition = 5;
  string zip = 6;
  string city = 7;
  Origin origin = 8;
  Contact contact = 9;
  google.protobuf.Any optionals = 10;
}

message Parcel {
  float weight = 1;
  float width = 2;
  float length = 3;
  float height = 4;
}

message Order {
  string order_id = 1;
  io.restorecommerce.fulfillment_product.Product product = 3;
  Parcel parcel = 5;
  Address sender = 6;
  Address receiver = 7;
  string notify = 8;
  google.protobuf.Any optionals = 10;
}

message FulfillmentOrder {
  string id = 1;
  Order order = 2;
  google.protobuf.Any optionals = 3;
}

message FulfillmentOrderList {
  repeated FulfillmentOrder orders = 1;
  io.restorecommerce.auth.Subject subject = 2;
}

message FulfillmentOrderQuery {
  io.restorecommerce.fulfillment_courier.Courier courier = 1;
  repeated FulfillmentOrder orders = 2;
  google.protobuf.Any optionals = 3; 
}

message FulfillmentOrderBatchQuery {
  repeated FulfillmentOrderQuery queries = 1;
  io.restorecommerce.auth.Subject subject = 2;
}

message Label {
  LabelType type = 1;
  string data = 2; //Could be an URL, base64 or bytes of i.e. a PDF or PNG...
}

message Fulfillment {
  string id = 1;
  string courier_id = 2;
  Order order = 2;
  string shipment_id = 3;
  Label label = 4;
  State state = 5;
  io.restorecommerce.meta.Meta meta = 6;
  io.restorecommerce.status.Status status = 7;
  google.protobuf.Any optionals = 8;
}

message FulfillmentResults {
  repeated Fulfillment fulfillments = 1;
  io.restorecommerce.status.OperationStatus operation_status = 2;
}

message FulfillmentId {
  string id = 1;
  string shipment_id = 2;
  string courier_id = 3;
  google.protobuf.Any optionals = 4;
}

message Event {
  io.restorecommerce.status.Status status = 1;
  string timestamp = 2;
  string location = 3;
  google.protobuf.Any details = 4;
}

message Tracking {
  io.restorecommerce.status.Status status = 1;
  FulfillmentId fulfillment_id = 2;
  repeated Event events = 3;
  google.protobuf.Any details = 4;
}

message TrackingQuery {
  io.restorecommerce.fulfillment_courier.Courier courier = 1;
  repeated FulfillmentId queries = 2;
}

message TrackingBatchQuery {
  repeated TrackingQuery queries = 1;
  io.restorecommerce.auth.Subject subject = 2;
}

message TrackingResults {
  repeated Tracking trackings = 1;
  io.restorecommerce.status.OperationStatus operation_status = 2;
}

message CancelQuery {
  repeated FulfillmentId queries = 1;
  io.restorecommerce.auth.Subject subject = 2;
}

message CancelResults {
  repeated io.restorecommerce.status.Status results = 1;
  io.restorecommerce.status.OperationStatus operation_status = 2;
}
