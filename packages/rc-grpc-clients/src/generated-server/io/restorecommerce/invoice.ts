/* eslint-disable */
import type { CallContext, CallOptions } from "nice-grpc-common";
import * as _m0 from "protobufjs/minimal";
import { FileDescriptorProto as FileDescriptorProto1 } from "ts-proto-descriptors";
import { Any, protoMetadata as protoMetadata5 } from "../../google/protobuf/any";
import { protoMetadata as protoMetadata4, Subject } from "./auth";
import { protoMetadata as protoMetadata8 } from "./customer";
import { Meta, protoMetadata as protoMetadata2 } from "./meta";
import { protoMetadata as protoMetadata7, Resolver } from "./options";
import { Organization, protoMetadata as protoMetadata3 } from "./organization";
import { DeleteRequest, DeleteResponse, protoMetadata as protoMetadata1, ReadRequest } from "./resource_base";
import { OperationStatus, protoMetadata as protoMetadata6, Status } from "./status";

export const protobufPackage = "io.restorecommerce.invoice";

export interface RequestInvoiceNumber {
  context?: Any;
  subject?: Subject;
}

export interface InvoiceNumberResponse {
  invoice_no: string;
}

export interface Deleted {
  id: string;
}

/** For multiple invoices */
export interface InvoiceList {
  items: Invoice[];
  total_count?: number | undefined;
  subject?: Subject;
}

export interface InvoiceListResponse {
  items: InvoiceResponse[];
  total_count: number;
  operation_status?: OperationStatus;
}

export interface InvoiceResponse {
  payload?: Invoice;
  status?: Status;
}

/** A simple invoice. */
export interface Invoice {
  id?: string | undefined;
  meta?: Meta | undefined;
  timestamp?: string | undefined;
  customer_id?: string | undefined;
  payment_status?: string | undefined;
  total_amount?: number | undefined;
  net_amount?:
    | number
    | undefined;
  /** difference between net and total */
  vat_amount?: number | undefined;
  document?: string | undefined;
  invoice_number?: string | undefined;
  customer_remark?: string | undefined;
}

/** List of Invoice Positions data */
export interface InvoicesPositionsData {
  invoices_positions_data: InvoicePositions[];
}

export interface InvoicePositions {
  /** contract or customer identifier */
  id?: string | undefined;
  invoice_positions: InvoicePosition[];
  recipient_customer?: RecipientCustomer | undefined;
  recipient_billing_address?: BillingAddress | undefined;
  sender_billing_address?: BillingAddress | undefined;
  recipient_organization?: Organization | undefined;
  sender_organization?: Organization | undefined;
  payment_method_details?:
    | Any
    | undefined;
  /** optional invoice number if not it will be generated by service */
  invoice_no?:
    | string
    | undefined;
  /** value performance from date */
  from_date?:
    | number
    | undefined;
  /** value performance to date */
  to_date?: number | undefined;
}

export interface RecipientCustomer {
  /** customer id - used to store the resource in DB */
  id?:
    | string
    | undefined;
  /** displayed in invoice */
  customer_number?: string | undefined;
}

export interface BillingAddress {
  email?: string | undefined;
  website?: string | undefined;
  street?: string | undefined;
  building_number?: string | undefined;
  postcode?: string | undefined;
  region?: string | undefined;
  country_name?: string | undefined;
  telephone?: string | undefined;
  timezone?: string | undefined;
  economic_area?: string | undefined;
  locality?: string | undefined;
  organization_name?: string | undefined;
}

export interface InvoicePosition {
  currency?: string | undefined;
  tableList: InvoiceRow[];
  totalPrice?: InvoicePrice | undefined;
}

export interface InvoiceRow {
  product?: string | undefined;
  pricePerUnit?: number | undefined;
  quantity?: number | undefined;
  vat?: string | undefined;
  amount?:
    | number
    | undefined;
  /** if there is any contract associated with product */
  contract_start_date?: number | undefined;
}

export interface InvoicePrice {
  gross?: number | undefined;
  net?: number | undefined;
}

export interface TriggerInvoices {
  /** list of id referring to contract_ids or customer_ids */
  ids: string[];
}

function createBaseRequestInvoiceNumber(): RequestInvoiceNumber {
  return { context: undefined, subject: undefined };
}

export const RequestInvoiceNumber = {
  encode(message: RequestInvoiceNumber, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.context !== undefined) {
      Any.encode(message.context, writer.uint32(10).fork()).ldelim();
    }
    if (message.subject !== undefined) {
      Subject.encode(message.subject, writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): RequestInvoiceNumber {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRequestInvoiceNumber();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.context = Any.decode(reader, reader.uint32());
          break;
        case 3:
          message.subject = Subject.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): RequestInvoiceNumber {
    return {
      context: isSet(object.context) ? Any.fromJSON(object.context) : undefined,
      subject: isSet(object.subject) ? Subject.fromJSON(object.subject) : undefined,
    };
  },

  toJSON(message: RequestInvoiceNumber): unknown {
    const obj: any = {};
    message.context !== undefined && (obj.context = message.context ? Any.toJSON(message.context) : undefined);
    message.subject !== undefined && (obj.subject = message.subject ? Subject.toJSON(message.subject) : undefined);
    return obj;
  },

  create(base?: DeepPartial<RequestInvoiceNumber>): RequestInvoiceNumber {
    return RequestInvoiceNumber.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<RequestInvoiceNumber>): RequestInvoiceNumber {
    const message = createBaseRequestInvoiceNumber();
    message.context = (object.context !== undefined && object.context !== null)
      ? Any.fromPartial(object.context)
      : undefined;
    message.subject = (object.subject !== undefined && object.subject !== null)
      ? Subject.fromPartial(object.subject)
      : undefined;
    return message;
  },
};

function createBaseInvoiceNumberResponse(): InvoiceNumberResponse {
  return { invoice_no: "" };
}

export const InvoiceNumberResponse = {
  encode(message: InvoiceNumberResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.invoice_no !== "") {
      writer.uint32(10).string(message.invoice_no);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoiceNumberResponse {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoiceNumberResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.invoice_no = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoiceNumberResponse {
    return { invoice_no: isSet(object.invoice_no) ? String(object.invoice_no) : "" };
  },

  toJSON(message: InvoiceNumberResponse): unknown {
    const obj: any = {};
    message.invoice_no !== undefined && (obj.invoice_no = message.invoice_no);
    return obj;
  },

  create(base?: DeepPartial<InvoiceNumberResponse>): InvoiceNumberResponse {
    return InvoiceNumberResponse.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<InvoiceNumberResponse>): InvoiceNumberResponse {
    const message = createBaseInvoiceNumberResponse();
    message.invoice_no = object.invoice_no ?? "";
    return message;
  },
};

function createBaseDeleted(): Deleted {
  return { id: "" };
}

export const Deleted = {
  encode(message: Deleted, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Deleted {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseDeleted();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): Deleted {
    return { id: isSet(object.id) ? String(object.id) : "" };
  },

  toJSON(message: Deleted): unknown {
    const obj: any = {};
    message.id !== undefined && (obj.id = message.id);
    return obj;
  },

  create(base?: DeepPartial<Deleted>): Deleted {
    return Deleted.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<Deleted>): Deleted {
    const message = createBaseDeleted();
    message.id = object.id ?? "";
    return message;
  },
};

function createBaseInvoiceList(): InvoiceList {
  return { items: [], total_count: undefined, subject: undefined };
}

export const InvoiceList = {
  encode(message: InvoiceList, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    for (const v of message.items) {
      Invoice.encode(v!, writer.uint32(10).fork()).ldelim();
    }
    if (message.total_count !== undefined) {
      writer.uint32(16).uint32(message.total_count);
    }
    if (message.subject !== undefined) {
      Subject.encode(message.subject, writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoiceList {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoiceList();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.items.push(Invoice.decode(reader, reader.uint32()));
          break;
        case 2:
          message.total_count = reader.uint32();
          break;
        case 3:
          message.subject = Subject.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoiceList {
    return {
      items: Array.isArray(object?.items) ? object.items.map((e: any) => Invoice.fromJSON(e)) : [],
      total_count: isSet(object.total_count) ? Number(object.total_count) : undefined,
      subject: isSet(object.subject) ? Subject.fromJSON(object.subject) : undefined,
    };
  },

  toJSON(message: InvoiceList): unknown {
    const obj: any = {};
    if (message.items) {
      obj.items = message.items.map((e) => e ? Invoice.toJSON(e) : undefined);
    } else {
      obj.items = [];
    }
    message.total_count !== undefined && (obj.total_count = Math.round(message.total_count));
    message.subject !== undefined && (obj.subject = message.subject ? Subject.toJSON(message.subject) : undefined);
    return obj;
  },

  create(base?: DeepPartial<InvoiceList>): InvoiceList {
    return InvoiceList.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<InvoiceList>): InvoiceList {
    const message = createBaseInvoiceList();
    message.items = object.items?.map((e) => Invoice.fromPartial(e)) || [];
    message.total_count = object.total_count ?? undefined;
    message.subject = (object.subject !== undefined && object.subject !== null)
      ? Subject.fromPartial(object.subject)
      : undefined;
    return message;
  },
};

function createBaseInvoiceListResponse(): InvoiceListResponse {
  return { items: [], total_count: 0, operation_status: undefined };
}

export const InvoiceListResponse = {
  encode(message: InvoiceListResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    for (const v of message.items) {
      InvoiceResponse.encode(v!, writer.uint32(10).fork()).ldelim();
    }
    if (message.total_count !== 0) {
      writer.uint32(16).uint32(message.total_count);
    }
    if (message.operation_status !== undefined) {
      OperationStatus.encode(message.operation_status, writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoiceListResponse {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoiceListResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.items.push(InvoiceResponse.decode(reader, reader.uint32()));
          break;
        case 2:
          message.total_count = reader.uint32();
          break;
        case 3:
          message.operation_status = OperationStatus.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoiceListResponse {
    return {
      items: Array.isArray(object?.items) ? object.items.map((e: any) => InvoiceResponse.fromJSON(e)) : [],
      total_count: isSet(object.total_count) ? Number(object.total_count) : 0,
      operation_status: isSet(object.operation_status) ? OperationStatus.fromJSON(object.operation_status) : undefined,
    };
  },

  toJSON(message: InvoiceListResponse): unknown {
    const obj: any = {};
    if (message.items) {
      obj.items = message.items.map((e) => e ? InvoiceResponse.toJSON(e) : undefined);
    } else {
      obj.items = [];
    }
    message.total_count !== undefined && (obj.total_count = Math.round(message.total_count));
    message.operation_status !== undefined &&
      (obj.operation_status = message.operation_status ? OperationStatus.toJSON(message.operation_status) : undefined);
    return obj;
  },

  create(base?: DeepPartial<InvoiceListResponse>): InvoiceListResponse {
    return InvoiceListResponse.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<InvoiceListResponse>): InvoiceListResponse {
    const message = createBaseInvoiceListResponse();
    message.items = object.items?.map((e) => InvoiceResponse.fromPartial(e)) || [];
    message.total_count = object.total_count ?? 0;
    message.operation_status = (object.operation_status !== undefined && object.operation_status !== null)
      ? OperationStatus.fromPartial(object.operation_status)
      : undefined;
    return message;
  },
};

function createBaseInvoiceResponse(): InvoiceResponse {
  return { payload: undefined, status: undefined };
}

export const InvoiceResponse = {
  encode(message: InvoiceResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.payload !== undefined) {
      Invoice.encode(message.payload, writer.uint32(10).fork()).ldelim();
    }
    if (message.status !== undefined) {
      Status.encode(message.status, writer.uint32(18).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoiceResponse {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoiceResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payload = Invoice.decode(reader, reader.uint32());
          break;
        case 2:
          message.status = Status.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoiceResponse {
    return {
      payload: isSet(object.payload) ? Invoice.fromJSON(object.payload) : undefined,
      status: isSet(object.status) ? Status.fromJSON(object.status) : undefined,
    };
  },

  toJSON(message: InvoiceResponse): unknown {
    const obj: any = {};
    message.payload !== undefined && (obj.payload = message.payload ? Invoice.toJSON(message.payload) : undefined);
    message.status !== undefined && (obj.status = message.status ? Status.toJSON(message.status) : undefined);
    return obj;
  },

  create(base?: DeepPartial<InvoiceResponse>): InvoiceResponse {
    return InvoiceResponse.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<InvoiceResponse>): InvoiceResponse {
    const message = createBaseInvoiceResponse();
    message.payload = (object.payload !== undefined && object.payload !== null)
      ? Invoice.fromPartial(object.payload)
      : undefined;
    message.status = (object.status !== undefined && object.status !== null)
      ? Status.fromPartial(object.status)
      : undefined;
    return message;
  },
};

function createBaseInvoice(): Invoice {
  return {
    id: undefined,
    meta: undefined,
    timestamp: undefined,
    customer_id: undefined,
    payment_status: undefined,
    total_amount: undefined,
    net_amount: undefined,
    vat_amount: undefined,
    document: undefined,
    invoice_number: undefined,
    customer_remark: undefined,
  };
}

export const Invoice = {
  encode(message: Invoice, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== undefined) {
      writer.uint32(10).string(message.id);
    }
    if (message.meta !== undefined) {
      Meta.encode(message.meta, writer.uint32(18).fork()).ldelim();
    }
    if (message.timestamp !== undefined) {
      writer.uint32(34).string(message.timestamp);
    }
    if (message.customer_id !== undefined) {
      writer.uint32(42).string(message.customer_id);
    }
    if (message.payment_status !== undefined) {
      writer.uint32(50).string(message.payment_status);
    }
    if (message.total_amount !== undefined) {
      writer.uint32(57).double(message.total_amount);
    }
    if (message.net_amount !== undefined) {
      writer.uint32(65).double(message.net_amount);
    }
    if (message.vat_amount !== undefined) {
      writer.uint32(73).double(message.vat_amount);
    }
    if (message.document !== undefined) {
      writer.uint32(82).string(message.document);
    }
    if (message.invoice_number !== undefined) {
      writer.uint32(90).string(message.invoice_number);
    }
    if (message.customer_remark !== undefined) {
      writer.uint32(98).string(message.customer_remark);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Invoice {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoice();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.string();
          break;
        case 2:
          message.meta = Meta.decode(reader, reader.uint32());
          break;
        case 4:
          message.timestamp = reader.string();
          break;
        case 5:
          message.customer_id = reader.string();
          break;
        case 6:
          message.payment_status = reader.string();
          break;
        case 7:
          message.total_amount = reader.double();
          break;
        case 8:
          message.net_amount = reader.double();
          break;
        case 9:
          message.vat_amount = reader.double();
          break;
        case 10:
          message.document = reader.string();
          break;
        case 11:
          message.invoice_number = reader.string();
          break;
        case 12:
          message.customer_remark = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): Invoice {
    return {
      id: isSet(object.id) ? String(object.id) : undefined,
      meta: isSet(object.meta) ? Meta.fromJSON(object.meta) : undefined,
      timestamp: isSet(object.timestamp) ? String(object.timestamp) : undefined,
      customer_id: isSet(object.customer_id) ? String(object.customer_id) : undefined,
      payment_status: isSet(object.payment_status) ? String(object.payment_status) : undefined,
      total_amount: isSet(object.total_amount) ? Number(object.total_amount) : undefined,
      net_amount: isSet(object.net_amount) ? Number(object.net_amount) : undefined,
      vat_amount: isSet(object.vat_amount) ? Number(object.vat_amount) : undefined,
      document: isSet(object.document) ? String(object.document) : undefined,
      invoice_number: isSet(object.invoice_number) ? String(object.invoice_number) : undefined,
      customer_remark: isSet(object.customer_remark) ? String(object.customer_remark) : undefined,
    };
  },

  toJSON(message: Invoice): unknown {
    const obj: any = {};
    message.id !== undefined && (obj.id = message.id);
    message.meta !== undefined && (obj.meta = message.meta ? Meta.toJSON(message.meta) : undefined);
    message.timestamp !== undefined && (obj.timestamp = message.timestamp);
    message.customer_id !== undefined && (obj.customer_id = message.customer_id);
    message.payment_status !== undefined && (obj.payment_status = message.payment_status);
    message.total_amount !== undefined && (obj.total_amount = message.total_amount);
    message.net_amount !== undefined && (obj.net_amount = message.net_amount);
    message.vat_amount !== undefined && (obj.vat_amount = message.vat_amount);
    message.document !== undefined && (obj.document = message.document);
    message.invoice_number !== undefined && (obj.invoice_number = message.invoice_number);
    message.customer_remark !== undefined && (obj.customer_remark = message.customer_remark);
    return obj;
  },

  create(base?: DeepPartial<Invoice>): Invoice {
    return Invoice.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<Invoice>): Invoice {
    const message = createBaseInvoice();
    message.id = object.id ?? undefined;
    message.meta = (object.meta !== undefined && object.meta !== null) ? Meta.fromPartial(object.meta) : undefined;
    message.timestamp = object.timestamp ?? undefined;
    message.customer_id = object.customer_id ?? undefined;
    message.payment_status = object.payment_status ?? undefined;
    message.total_amount = object.total_amount ?? undefined;
    message.net_amount = object.net_amount ?? undefined;
    message.vat_amount = object.vat_amount ?? undefined;
    message.document = object.document ?? undefined;
    message.invoice_number = object.invoice_number ?? undefined;
    message.customer_remark = object.customer_remark ?? undefined;
    return message;
  },
};

function createBaseInvoicesPositionsData(): InvoicesPositionsData {
  return { invoices_positions_data: [] };
}

export const InvoicesPositionsData = {
  encode(message: InvoicesPositionsData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    for (const v of message.invoices_positions_data) {
      InvoicePositions.encode(v!, writer.uint32(10).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoicesPositionsData {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoicesPositionsData();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.invoices_positions_data.push(InvoicePositions.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoicesPositionsData {
    return {
      invoices_positions_data: Array.isArray(object?.invoices_positions_data)
        ? object.invoices_positions_data.map((e: any) => InvoicePositions.fromJSON(e))
        : [],
    };
  },

  toJSON(message: InvoicesPositionsData): unknown {
    const obj: any = {};
    if (message.invoices_positions_data) {
      obj.invoices_positions_data = message.invoices_positions_data.map((e) =>
        e ? InvoicePositions.toJSON(e) : undefined
      );
    } else {
      obj.invoices_positions_data = [];
    }
    return obj;
  },

  create(base?: DeepPartial<InvoicesPositionsData>): InvoicesPositionsData {
    return InvoicesPositionsData.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<InvoicesPositionsData>): InvoicesPositionsData {
    const message = createBaseInvoicesPositionsData();
    message.invoices_positions_data = object.invoices_positions_data?.map((e) => InvoicePositions.fromPartial(e)) || [];
    return message;
  },
};

function createBaseInvoicePositions(): InvoicePositions {
  return {
    id: undefined,
    invoice_positions: [],
    recipient_customer: undefined,
    recipient_billing_address: undefined,
    sender_billing_address: undefined,
    recipient_organization: undefined,
    sender_organization: undefined,
    payment_method_details: undefined,
    invoice_no: undefined,
    from_date: undefined,
    to_date: undefined,
  };
}

export const InvoicePositions = {
  encode(message: InvoicePositions, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== undefined) {
      writer.uint32(10).string(message.id);
    }
    for (const v of message.invoice_positions) {
      InvoicePosition.encode(v!, writer.uint32(18).fork()).ldelim();
    }
    if (message.recipient_customer !== undefined) {
      RecipientCustomer.encode(message.recipient_customer, writer.uint32(26).fork()).ldelim();
    }
    if (message.recipient_billing_address !== undefined) {
      BillingAddress.encode(message.recipient_billing_address, writer.uint32(34).fork()).ldelim();
    }
    if (message.sender_billing_address !== undefined) {
      BillingAddress.encode(message.sender_billing_address, writer.uint32(42).fork()).ldelim();
    }
    if (message.recipient_organization !== undefined) {
      Organization.encode(message.recipient_organization, writer.uint32(50).fork()).ldelim();
    }
    if (message.sender_organization !== undefined) {
      Organization.encode(message.sender_organization, writer.uint32(58).fork()).ldelim();
    }
    if (message.payment_method_details !== undefined) {
      Any.encode(message.payment_method_details, writer.uint32(66).fork()).ldelim();
    }
    if (message.invoice_no !== undefined) {
      writer.uint32(74).string(message.invoice_no);
    }
    if (message.from_date !== undefined) {
      writer.uint32(81).double(message.from_date);
    }
    if (message.to_date !== undefined) {
      writer.uint32(89).double(message.to_date);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoicePositions {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoicePositions();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.string();
          break;
        case 2:
          message.invoice_positions.push(InvoicePosition.decode(reader, reader.uint32()));
          break;
        case 3:
          message.recipient_customer = RecipientCustomer.decode(reader, reader.uint32());
          break;
        case 4:
          message.recipient_billing_address = BillingAddress.decode(reader, reader.uint32());
          break;
        case 5:
          message.sender_billing_address = BillingAddress.decode(reader, reader.uint32());
          break;
        case 6:
          message.recipient_organization = Organization.decode(reader, reader.uint32());
          break;
        case 7:
          message.sender_organization = Organization.decode(reader, reader.uint32());
          break;
        case 8:
          message.payment_method_details = Any.decode(reader, reader.uint32());
          break;
        case 9:
          message.invoice_no = reader.string();
          break;
        case 10:
          message.from_date = reader.double();
          break;
        case 11:
          message.to_date = reader.double();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoicePositions {
    return {
      id: isSet(object.id) ? String(object.id) : undefined,
      invoice_positions: Array.isArray(object?.invoice_positions)
        ? object.invoice_positions.map((e: any) => InvoicePosition.fromJSON(e))
        : [],
      recipient_customer: isSet(object.recipient_customer)
        ? RecipientCustomer.fromJSON(object.recipient_customer)
        : undefined,
      recipient_billing_address: isSet(object.recipient_billing_address)
        ? BillingAddress.fromJSON(object.recipient_billing_address)
        : undefined,
      sender_billing_address: isSet(object.sender_billing_address)
        ? BillingAddress.fromJSON(object.sender_billing_address)
        : undefined,
      recipient_organization: isSet(object.recipient_organization)
        ? Organization.fromJSON(object.recipient_organization)
        : undefined,
      sender_organization: isSet(object.sender_organization)
        ? Organization.fromJSON(object.sender_organization)
        : undefined,
      payment_method_details: isSet(object.payment_method_details)
        ? Any.fromJSON(object.payment_method_details)
        : undefined,
      invoice_no: isSet(object.invoice_no) ? String(object.invoice_no) : undefined,
      from_date: isSet(object.from_date) ? Number(object.from_date) : undefined,
      to_date: isSet(object.to_date) ? Number(object.to_date) : undefined,
    };
  },

  toJSON(message: InvoicePositions): unknown {
    const obj: any = {};
    message.id !== undefined && (obj.id = message.id);
    if (message.invoice_positions) {
      obj.invoice_positions = message.invoice_positions.map((e) => e ? InvoicePosition.toJSON(e) : undefined);
    } else {
      obj.invoice_positions = [];
    }
    message.recipient_customer !== undefined && (obj.recipient_customer = message.recipient_customer
      ? RecipientCustomer.toJSON(message.recipient_customer)
      : undefined);
    message.recipient_billing_address !== undefined &&
      (obj.recipient_billing_address = message.recipient_billing_address
        ? BillingAddress.toJSON(message.recipient_billing_address)
        : undefined);
    message.sender_billing_address !== undefined && (obj.sender_billing_address = message.sender_billing_address
      ? BillingAddress.toJSON(message.sender_billing_address)
      : undefined);
    message.recipient_organization !== undefined && (obj.recipient_organization = message.recipient_organization
      ? Organization.toJSON(message.recipient_organization)
      : undefined);
    message.sender_organization !== undefined && (obj.sender_organization = message.sender_organization
      ? Organization.toJSON(message.sender_organization)
      : undefined);
    message.payment_method_details !== undefined && (obj.payment_method_details = message.payment_method_details
      ? Any.toJSON(message.payment_method_details)
      : undefined);
    message.invoice_no !== undefined && (obj.invoice_no = message.invoice_no);
    message.from_date !== undefined && (obj.from_date = message.from_date);
    message.to_date !== undefined && (obj.to_date = message.to_date);
    return obj;
  },

  create(base?: DeepPartial<InvoicePositions>): InvoicePositions {
    return InvoicePositions.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<InvoicePositions>): InvoicePositions {
    const message = createBaseInvoicePositions();
    message.id = object.id ?? undefined;
    message.invoice_positions = object.invoice_positions?.map((e) => InvoicePosition.fromPartial(e)) || [];
    message.recipient_customer = (object.recipient_customer !== undefined && object.recipient_customer !== null)
      ? RecipientCustomer.fromPartial(object.recipient_customer)
      : undefined;
    message.recipient_billing_address =
      (object.recipient_billing_address !== undefined && object.recipient_billing_address !== null)
        ? BillingAddress.fromPartial(object.recipient_billing_address)
        : undefined;
    message.sender_billing_address =
      (object.sender_billing_address !== undefined && object.sender_billing_address !== null)
        ? BillingAddress.fromPartial(object.sender_billing_address)
        : undefined;
    message.recipient_organization =
      (object.recipient_organization !== undefined && object.recipient_organization !== null)
        ? Organization.fromPartial(object.recipient_organization)
        : undefined;
    message.sender_organization = (object.sender_organization !== undefined && object.sender_organization !== null)
      ? Organization.fromPartial(object.sender_organization)
      : undefined;
    message.payment_method_details =
      (object.payment_method_details !== undefined && object.payment_method_details !== null)
        ? Any.fromPartial(object.payment_method_details)
        : undefined;
    message.invoice_no = object.invoice_no ?? undefined;
    message.from_date = object.from_date ?? undefined;
    message.to_date = object.to_date ?? undefined;
    return message;
  },
};

function createBaseRecipientCustomer(): RecipientCustomer {
  return { id: undefined, customer_number: undefined };
}

export const RecipientCustomer = {
  encode(message: RecipientCustomer, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== undefined) {
      writer.uint32(10).string(message.id);
    }
    if (message.customer_number !== undefined) {
      writer.uint32(18).string(message.customer_number);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): RecipientCustomer {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRecipientCustomer();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.string();
          break;
        case 2:
          message.customer_number = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): RecipientCustomer {
    return {
      id: isSet(object.id) ? String(object.id) : undefined,
      customer_number: isSet(object.customer_number) ? String(object.customer_number) : undefined,
    };
  },

  toJSON(message: RecipientCustomer): unknown {
    const obj: any = {};
    message.id !== undefined && (obj.id = message.id);
    message.customer_number !== undefined && (obj.customer_number = message.customer_number);
    return obj;
  },

  create(base?: DeepPartial<RecipientCustomer>): RecipientCustomer {
    return RecipientCustomer.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<RecipientCustomer>): RecipientCustomer {
    const message = createBaseRecipientCustomer();
    message.id = object.id ?? undefined;
    message.customer_number = object.customer_number ?? undefined;
    return message;
  },
};

function createBaseBillingAddress(): BillingAddress {
  return {
    email: undefined,
    website: undefined,
    street: undefined,
    building_number: undefined,
    postcode: undefined,
    region: undefined,
    country_name: undefined,
    telephone: undefined,
    timezone: undefined,
    economic_area: undefined,
    locality: undefined,
    organization_name: undefined,
  };
}

export const BillingAddress = {
  encode(message: BillingAddress, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.email !== undefined) {
      writer.uint32(10).string(message.email);
    }
    if (message.website !== undefined) {
      writer.uint32(18).string(message.website);
    }
    if (message.street !== undefined) {
      writer.uint32(26).string(message.street);
    }
    if (message.building_number !== undefined) {
      writer.uint32(34).string(message.building_number);
    }
    if (message.postcode !== undefined) {
      writer.uint32(42).string(message.postcode);
    }
    if (message.region !== undefined) {
      writer.uint32(50).string(message.region);
    }
    if (message.country_name !== undefined) {
      writer.uint32(58).string(message.country_name);
    }
    if (message.telephone !== undefined) {
      writer.uint32(74).string(message.telephone);
    }
    if (message.timezone !== undefined) {
      writer.uint32(82).string(message.timezone);
    }
    if (message.economic_area !== undefined) {
      writer.uint32(90).string(message.economic_area);
    }
    if (message.locality !== undefined) {
      writer.uint32(98).string(message.locality);
    }
    if (message.organization_name !== undefined) {
      writer.uint32(106).string(message.organization_name);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): BillingAddress {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseBillingAddress();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.email = reader.string();
          break;
        case 2:
          message.website = reader.string();
          break;
        case 3:
          message.street = reader.string();
          break;
        case 4:
          message.building_number = reader.string();
          break;
        case 5:
          message.postcode = reader.string();
          break;
        case 6:
          message.region = reader.string();
          break;
        case 7:
          message.country_name = reader.string();
          break;
        case 9:
          message.telephone = reader.string();
          break;
        case 10:
          message.timezone = reader.string();
          break;
        case 11:
          message.economic_area = reader.string();
          break;
        case 12:
          message.locality = reader.string();
          break;
        case 13:
          message.organization_name = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): BillingAddress {
    return {
      email: isSet(object.email) ? String(object.email) : undefined,
      website: isSet(object.website) ? String(object.website) : undefined,
      street: isSet(object.street) ? String(object.street) : undefined,
      building_number: isSet(object.building_number) ? String(object.building_number) : undefined,
      postcode: isSet(object.postcode) ? String(object.postcode) : undefined,
      region: isSet(object.region) ? String(object.region) : undefined,
      country_name: isSet(object.country_name) ? String(object.country_name) : undefined,
      telephone: isSet(object.telephone) ? String(object.telephone) : undefined,
      timezone: isSet(object.timezone) ? String(object.timezone) : undefined,
      economic_area: isSet(object.economic_area) ? String(object.economic_area) : undefined,
      locality: isSet(object.locality) ? String(object.locality) : undefined,
      organization_name: isSet(object.organization_name) ? String(object.organization_name) : undefined,
    };
  },

  toJSON(message: BillingAddress): unknown {
    const obj: any = {};
    message.email !== undefined && (obj.email = message.email);
    message.website !== undefined && (obj.website = message.website);
    message.street !== undefined && (obj.street = message.street);
    message.building_number !== undefined && (obj.building_number = message.building_number);
    message.postcode !== undefined && (obj.postcode = message.postcode);
    message.region !== undefined && (obj.region = message.region);
    message.country_name !== undefined && (obj.country_name = message.country_name);
    message.telephone !== undefined && (obj.telephone = message.telephone);
    message.timezone !== undefined && (obj.timezone = message.timezone);
    message.economic_area !== undefined && (obj.economic_area = message.economic_area);
    message.locality !== undefined && (obj.locality = message.locality);
    message.organization_name !== undefined && (obj.organization_name = message.organization_name);
    return obj;
  },

  create(base?: DeepPartial<BillingAddress>): BillingAddress {
    return BillingAddress.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<BillingAddress>): BillingAddress {
    const message = createBaseBillingAddress();
    message.email = object.email ?? undefined;
    message.website = object.website ?? undefined;
    message.street = object.street ?? undefined;
    message.building_number = object.building_number ?? undefined;
    message.postcode = object.postcode ?? undefined;
    message.region = object.region ?? undefined;
    message.country_name = object.country_name ?? undefined;
    message.telephone = object.telephone ?? undefined;
    message.timezone = object.timezone ?? undefined;
    message.economic_area = object.economic_area ?? undefined;
    message.locality = object.locality ?? undefined;
    message.organization_name = object.organization_name ?? undefined;
    return message;
  },
};

function createBaseInvoicePosition(): InvoicePosition {
  return { currency: undefined, tableList: [], totalPrice: undefined };
}

export const InvoicePosition = {
  encode(message: InvoicePosition, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.currency !== undefined) {
      writer.uint32(10).string(message.currency);
    }
    for (const v of message.tableList) {
      InvoiceRow.encode(v!, writer.uint32(18).fork()).ldelim();
    }
    if (message.totalPrice !== undefined) {
      InvoicePrice.encode(message.totalPrice, writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoicePosition {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoicePosition();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.currency = reader.string();
          break;
        case 2:
          message.tableList.push(InvoiceRow.decode(reader, reader.uint32()));
          break;
        case 3:
          message.totalPrice = InvoicePrice.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoicePosition {
    return {
      currency: isSet(object.currency) ? String(object.currency) : undefined,
      tableList: Array.isArray(object?.tableList) ? object.tableList.map((e: any) => InvoiceRow.fromJSON(e)) : [],
      totalPrice: isSet(object.totalPrice) ? InvoicePrice.fromJSON(object.totalPrice) : undefined,
    };
  },

  toJSON(message: InvoicePosition): unknown {
    const obj: any = {};
    message.currency !== undefined && (obj.currency = message.currency);
    if (message.tableList) {
      obj.tableList = message.tableList.map((e) => e ? InvoiceRow.toJSON(e) : undefined);
    } else {
      obj.tableList = [];
    }
    message.totalPrice !== undefined &&
      (obj.totalPrice = message.totalPrice ? InvoicePrice.toJSON(message.totalPrice) : undefined);
    return obj;
  },

  create(base?: DeepPartial<InvoicePosition>): InvoicePosition {
    return InvoicePosition.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<InvoicePosition>): InvoicePosition {
    const message = createBaseInvoicePosition();
    message.currency = object.currency ?? undefined;
    message.tableList = object.tableList?.map((e) => InvoiceRow.fromPartial(e)) || [];
    message.totalPrice = (object.totalPrice !== undefined && object.totalPrice !== null)
      ? InvoicePrice.fromPartial(object.totalPrice)
      : undefined;
    return message;
  },
};

function createBaseInvoiceRow(): InvoiceRow {
  return {
    product: undefined,
    pricePerUnit: undefined,
    quantity: undefined,
    vat: undefined,
    amount: undefined,
    contract_start_date: undefined,
  };
}

export const InvoiceRow = {
  encode(message: InvoiceRow, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.product !== undefined) {
      writer.uint32(10).string(message.product);
    }
    if (message.pricePerUnit !== undefined) {
      writer.uint32(17).double(message.pricePerUnit);
    }
    if (message.quantity !== undefined) {
      writer.uint32(24).uint32(message.quantity);
    }
    if (message.vat !== undefined) {
      writer.uint32(34).string(message.vat);
    }
    if (message.amount !== undefined) {
      writer.uint32(41).double(message.amount);
    }
    if (message.contract_start_date !== undefined) {
      writer.uint32(49).double(message.contract_start_date);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoiceRow {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoiceRow();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.product = reader.string();
          break;
        case 2:
          message.pricePerUnit = reader.double();
          break;
        case 3:
          message.quantity = reader.uint32();
          break;
        case 4:
          message.vat = reader.string();
          break;
        case 5:
          message.amount = reader.double();
          break;
        case 6:
          message.contract_start_date = reader.double();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoiceRow {
    return {
      product: isSet(object.product) ? String(object.product) : undefined,
      pricePerUnit: isSet(object.pricePerUnit) ? Number(object.pricePerUnit) : undefined,
      quantity: isSet(object.quantity) ? Number(object.quantity) : undefined,
      vat: isSet(object.vat) ? String(object.vat) : undefined,
      amount: isSet(object.amount) ? Number(object.amount) : undefined,
      contract_start_date: isSet(object.contract_start_date) ? Number(object.contract_start_date) : undefined,
    };
  },

  toJSON(message: InvoiceRow): unknown {
    const obj: any = {};
    message.product !== undefined && (obj.product = message.product);
    message.pricePerUnit !== undefined && (obj.pricePerUnit = message.pricePerUnit);
    message.quantity !== undefined && (obj.quantity = Math.round(message.quantity));
    message.vat !== undefined && (obj.vat = message.vat);
    message.amount !== undefined && (obj.amount = message.amount);
    message.contract_start_date !== undefined && (obj.contract_start_date = message.contract_start_date);
    return obj;
  },

  create(base?: DeepPartial<InvoiceRow>): InvoiceRow {
    return InvoiceRow.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<InvoiceRow>): InvoiceRow {
    const message = createBaseInvoiceRow();
    message.product = object.product ?? undefined;
    message.pricePerUnit = object.pricePerUnit ?? undefined;
    message.quantity = object.quantity ?? undefined;
    message.vat = object.vat ?? undefined;
    message.amount = object.amount ?? undefined;
    message.contract_start_date = object.contract_start_date ?? undefined;
    return message;
  },
};

function createBaseInvoicePrice(): InvoicePrice {
  return { gross: undefined, net: undefined };
}

export const InvoicePrice = {
  encode(message: InvoicePrice, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.gross !== undefined) {
      writer.uint32(9).double(message.gross);
    }
    if (message.net !== undefined) {
      writer.uint32(17).double(message.net);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): InvoicePrice {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseInvoicePrice();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.gross = reader.double();
          break;
        case 2:
          message.net = reader.double();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): InvoicePrice {
    return {
      gross: isSet(object.gross) ? Number(object.gross) : undefined,
      net: isSet(object.net) ? Number(object.net) : undefined,
    };
  },

  toJSON(message: InvoicePrice): unknown {
    const obj: any = {};
    message.gross !== undefined && (obj.gross = message.gross);
    message.net !== undefined && (obj.net = message.net);
    return obj;
  },

  create(base?: DeepPartial<InvoicePrice>): InvoicePrice {
    return InvoicePrice.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<InvoicePrice>): InvoicePrice {
    const message = createBaseInvoicePrice();
    message.gross = object.gross ?? undefined;
    message.net = object.net ?? undefined;
    return message;
  },
};

function createBaseTriggerInvoices(): TriggerInvoices {
  return { ids: [] };
}

export const TriggerInvoices = {
  encode(message: TriggerInvoices, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    for (const v of message.ids) {
      writer.uint32(10).string(v!);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): TriggerInvoices {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseTriggerInvoices();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.ids.push(reader.string());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },

  fromJSON(object: any): TriggerInvoices {
    return { ids: Array.isArray(object?.ids) ? object.ids.map((e: any) => String(e)) : [] };
  },

  toJSON(message: TriggerInvoices): unknown {
    const obj: any = {};
    if (message.ids) {
      obj.ids = message.ids.map((e) => e);
    } else {
      obj.ids = [];
    }
    return obj;
  },

  create(base?: DeepPartial<TriggerInvoices>): TriggerInvoices {
    return TriggerInvoices.fromPartial(base ?? {});
  },

  fromPartial(object: DeepPartial<TriggerInvoices>): TriggerInvoices {
    const message = createBaseTriggerInvoices();
    message.ids = object.ids?.map((e) => e) || [];
    return message;
  },
};

/** Microservice definition. */
export type ServiceDefinition = typeof ServiceDefinition;
export const ServiceDefinition = {
  name: "Service",
  fullName: "io.restorecommerce.invoice.Service",
  methods: {
    read: {
      name: "Read",
      requestType: ReadRequest,
      requestStream: false,
      responseType: InvoiceListResponse,
      responseStream: false,
      options: {},
    },
    create: {
      name: "Create",
      requestType: InvoiceList,
      requestStream: false,
      responseType: InvoiceListResponse,
      responseStream: false,
      options: {},
    },
    delete: {
      name: "Delete",
      requestType: DeleteRequest,
      requestStream: false,
      responseType: DeleteResponse,
      responseStream: false,
      options: {},
    },
    update: {
      name: "Update",
      requestType: InvoiceList,
      requestStream: false,
      responseType: InvoiceListResponse,
      responseStream: false,
      options: {},
    },
    upsert: {
      name: "Upsert",
      requestType: InvoiceList,
      requestStream: false,
      responseType: InvoiceListResponse,
      responseStream: false,
      options: {},
    },
    generateInvoiceNumber: {
      name: "GenerateInvoiceNumber",
      requestType: RequestInvoiceNumber,
      requestStream: false,
      responseType: InvoiceNumberResponse,
      responseStream: false,
      options: {},
    },
  },
} as const;

export interface ServiceImplementation<CallContextExt = {}> {
  read(request: ReadRequest, context: CallContext & CallContextExt): Promise<DeepPartial<InvoiceListResponse>>;
  create(request: InvoiceList, context: CallContext & CallContextExt): Promise<DeepPartial<InvoiceListResponse>>;
  delete(request: DeleteRequest, context: CallContext & CallContextExt): Promise<DeepPartial<DeleteResponse>>;
  update(request: InvoiceList, context: CallContext & CallContextExt): Promise<DeepPartial<InvoiceListResponse>>;
  upsert(request: InvoiceList, context: CallContext & CallContextExt): Promise<DeepPartial<InvoiceListResponse>>;
  generateInvoiceNumber(
    request: RequestInvoiceNumber,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<InvoiceNumberResponse>>;
}

export interface ServiceClient<CallOptionsExt = {}> {
  read(request: DeepPartial<ReadRequest>, options?: CallOptions & CallOptionsExt): Promise<InvoiceListResponse>;
  create(request: DeepPartial<InvoiceList>, options?: CallOptions & CallOptionsExt): Promise<InvoiceListResponse>;
  delete(request: DeepPartial<DeleteRequest>, options?: CallOptions & CallOptionsExt): Promise<DeleteResponse>;
  update(request: DeepPartial<InvoiceList>, options?: CallOptions & CallOptionsExt): Promise<InvoiceListResponse>;
  upsert(request: DeepPartial<InvoiceList>, options?: CallOptions & CallOptionsExt): Promise<InvoiceListResponse>;
  generateInvoiceNumber(
    request: DeepPartial<RequestInvoiceNumber>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<InvoiceNumberResponse>;
}

type ProtoMetaMessageOptions = {
  options?: { [key: string]: any };
  fields?: { [key: string]: { [key: string]: any } };
  oneof?: { [key: string]: { [key: string]: any } };
  nested?: { [key: string]: ProtoMetaMessageOptions };
};

export interface ProtoMetadata {
  fileDescriptor: FileDescriptorProto1;
  references: { [key: string]: any };
  dependencies?: ProtoMetadata[];
  options?: {
    options?: { [key: string]: any };
    services?: {
      [key: string]: { options?: { [key: string]: any }; methods?: { [key: string]: { [key: string]: any } } };
    };
    messages?: { [key: string]: ProtoMetaMessageOptions };
    enums?: { [key: string]: { options?: { [key: string]: any }; values?: { [key: string]: { [key: string]: any } } } };
  };
}

export const protoMetadata: ProtoMetadata = {
  fileDescriptor: FileDescriptorProto1.fromPartial({
    "name": "io/restorecommerce/invoice.proto",
    "package": "io.restorecommerce.invoice",
    "dependency": [
      "io/restorecommerce/resource_base.proto",
      "io/restorecommerce/meta.proto",
      "io/restorecommerce/organization.proto",
      "io/restorecommerce/auth.proto",
      "google/protobuf/any.proto",
      "io/restorecommerce/status.proto",
      "io/restorecommerce/options.proto",
      "io/restorecommerce/customer.proto",
    ],
    "publicDependency": [],
    "weakDependency": [],
    "messageType": [{
      "name": "RequestInvoiceNumber",
      "field": [{
        "name": "context",
        "number": 1,
        "label": 1,
        "type": 11,
        "typeName": ".google.protobuf.Any",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "context",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "subject",
        "number": 3,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.auth.Subject",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "subject",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoiceNumberResponse",
      "field": [{
        "name": "invoice_no",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "invoiceNo",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "Deleted",
      "field": [{
        "name": "id",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "id",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoiceList",
      "field": [{
        "name": "items",
        "number": 1,
        "label": 3,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.Invoice",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "items",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "total_count",
        "number": 2,
        "label": 1,
        "type": 13,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "totalCount",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "subject",
        "number": 3,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.auth.Subject",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "subject",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [{ "name": "_total_count", "options": undefined }],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoiceListResponse",
      "field": [{
        "name": "items",
        "number": 1,
        "label": 3,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.InvoiceResponse",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "items",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "total_count",
        "number": 2,
        "label": 1,
        "type": 13,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "totalCount",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "operation_status",
        "number": 3,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.status.OperationStatus",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "operationStatus",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoiceResponse",
      "field": [{
        "name": "payload",
        "number": 1,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.Invoice",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "payload",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "status",
        "number": 2,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.status.Status",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "status",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "Invoice",
      "field": [{
        "name": "id",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "id",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "meta",
        "number": 2,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.meta.Meta",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 1,
        "jsonName": "meta",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "timestamp",
        "number": 4,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 2,
        "jsonName": "timestamp",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "customer_id",
        "number": 5,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 3,
        "jsonName": "customerId",
        "options": {
          "ctype": 0,
          "packed": false,
          "jstype": 0,
          "lazy": false,
          "deprecated": false,
          "weak": false,
          "uninterpretedOption": [],
        },
        "proto3Optional": true,
      }, {
        "name": "payment_status",
        "number": 6,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 4,
        "jsonName": "paymentStatus",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "total_amount",
        "number": 7,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 5,
        "jsonName": "totalAmount",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "net_amount",
        "number": 8,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 6,
        "jsonName": "netAmount",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "vat_amount",
        "number": 9,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 7,
        "jsonName": "vatAmount",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "document",
        "number": 10,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 8,
        "jsonName": "document",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "invoice_number",
        "number": 11,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 9,
        "jsonName": "invoiceNumber",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "customer_remark",
        "number": 12,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 10,
        "jsonName": "customerRemark",
        "options": undefined,
        "proto3Optional": true,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [
        { "name": "_id", "options": undefined },
        { "name": "_meta", "options": undefined },
        { "name": "_timestamp", "options": undefined },
        { "name": "_customer_id", "options": undefined },
        { "name": "_payment_status", "options": undefined },
        { "name": "_total_amount", "options": undefined },
        { "name": "_net_amount", "options": undefined },
        { "name": "_vat_amount", "options": undefined },
        { "name": "_document", "options": undefined },
        { "name": "_invoice_number", "options": undefined },
        { "name": "_customer_remark", "options": undefined },
      ],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoicesPositionsData",
      "field": [{
        "name": "invoices_positions_data",
        "number": 1,
        "label": 3,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.InvoicePositions",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "invoicesPositionsData",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoicePositions",
      "field": [{
        "name": "id",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "id",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "invoice_positions",
        "number": 2,
        "label": 3,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.InvoicePosition",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "invoicePositions",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "recipient_customer",
        "number": 3,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.RecipientCustomer",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 1,
        "jsonName": "recipientCustomer",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "recipient_billing_address",
        "number": 4,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.BillingAddress",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 2,
        "jsonName": "recipientBillingAddress",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "sender_billing_address",
        "number": 5,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.BillingAddress",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 3,
        "jsonName": "senderBillingAddress",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "recipient_organization",
        "number": 6,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.organization.Organization",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 4,
        "jsonName": "recipientOrganization",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "sender_organization",
        "number": 7,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.organization.Organization",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 5,
        "jsonName": "senderOrganization",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "payment_method_details",
        "number": 8,
        "label": 1,
        "type": 11,
        "typeName": ".google.protobuf.Any",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 6,
        "jsonName": "paymentMethodDetails",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "invoice_no",
        "number": 9,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 7,
        "jsonName": "invoiceNo",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "from_date",
        "number": 10,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 8,
        "jsonName": "fromDate",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "to_date",
        "number": 11,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 9,
        "jsonName": "toDate",
        "options": undefined,
        "proto3Optional": true,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [
        { "name": "_id", "options": undefined },
        { "name": "_recipient_customer", "options": undefined },
        { "name": "_recipient_billing_address", "options": undefined },
        { "name": "_sender_billing_address", "options": undefined },
        { "name": "_recipient_organization", "options": undefined },
        { "name": "_sender_organization", "options": undefined },
        { "name": "_payment_method_details", "options": undefined },
        { "name": "_invoice_no", "options": undefined },
        { "name": "_from_date", "options": undefined },
        { "name": "_to_date", "options": undefined },
      ],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "RecipientCustomer",
      "field": [{
        "name": "id",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "id",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "customer_number",
        "number": 2,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 1,
        "jsonName": "customerNumber",
        "options": undefined,
        "proto3Optional": true,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [{ "name": "_id", "options": undefined }, { "name": "_customer_number", "options": undefined }],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "BillingAddress",
      "field": [{
        "name": "email",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "email",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "website",
        "number": 2,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 1,
        "jsonName": "website",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "street",
        "number": 3,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 2,
        "jsonName": "street",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "building_number",
        "number": 4,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 3,
        "jsonName": "buildingNumber",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "postcode",
        "number": 5,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 4,
        "jsonName": "postcode",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "region",
        "number": 6,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 5,
        "jsonName": "region",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "country_name",
        "number": 7,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 6,
        "jsonName": "countryName",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "telephone",
        "number": 9,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 7,
        "jsonName": "telephone",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "timezone",
        "number": 10,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 8,
        "jsonName": "timezone",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "economic_area",
        "number": 11,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 9,
        "jsonName": "economicArea",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "locality",
        "number": 12,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 10,
        "jsonName": "locality",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "organization_name",
        "number": 13,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 11,
        "jsonName": "organizationName",
        "options": undefined,
        "proto3Optional": true,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [
        { "name": "_email", "options": undefined },
        { "name": "_website", "options": undefined },
        { "name": "_street", "options": undefined },
        { "name": "_building_number", "options": undefined },
        { "name": "_postcode", "options": undefined },
        { "name": "_region", "options": undefined },
        { "name": "_country_name", "options": undefined },
        { "name": "_telephone", "options": undefined },
        { "name": "_timezone", "options": undefined },
        { "name": "_economic_area", "options": undefined },
        { "name": "_locality", "options": undefined },
        { "name": "_organization_name", "options": undefined },
      ],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoicePosition",
      "field": [{
        "name": "currency",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "currency",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "tableList",
        "number": 2,
        "label": 3,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.InvoiceRow",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "tableList",
        "options": undefined,
        "proto3Optional": false,
      }, {
        "name": "totalPrice",
        "number": 3,
        "label": 1,
        "type": 11,
        "typeName": ".io.restorecommerce.invoice.InvoicePrice",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 1,
        "jsonName": "totalPrice",
        "options": undefined,
        "proto3Optional": true,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [{ "name": "_currency", "options": undefined }, { "name": "_totalPrice", "options": undefined }],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoiceRow",
      "field": [{
        "name": "product",
        "number": 1,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "product",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "pricePerUnit",
        "number": 2,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 1,
        "jsonName": "pricePerUnit",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "quantity",
        "number": 3,
        "label": 1,
        "type": 13,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 2,
        "jsonName": "quantity",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "vat",
        "number": 4,
        "label": 1,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 3,
        "jsonName": "vat",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "amount",
        "number": 5,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 4,
        "jsonName": "amount",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "contract_start_date",
        "number": 6,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 5,
        "jsonName": "contractStartDate",
        "options": undefined,
        "proto3Optional": true,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [
        { "name": "_product", "options": undefined },
        { "name": "_pricePerUnit", "options": undefined },
        { "name": "_quantity", "options": undefined },
        { "name": "_vat", "options": undefined },
        { "name": "_amount", "options": undefined },
        { "name": "_contract_start_date", "options": undefined },
      ],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "InvoicePrice",
      "field": [{
        "name": "gross",
        "number": 1,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "gross",
        "options": undefined,
        "proto3Optional": true,
      }, {
        "name": "net",
        "number": 2,
        "label": 1,
        "type": 1,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 1,
        "jsonName": "net",
        "options": undefined,
        "proto3Optional": true,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [{ "name": "_gross", "options": undefined }, { "name": "_net", "options": undefined }],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }, {
      "name": "TriggerInvoices",
      "field": [{
        "name": "ids",
        "number": 1,
        "label": 3,
        "type": 9,
        "typeName": "",
        "extendee": "",
        "defaultValue": "",
        "oneofIndex": 0,
        "jsonName": "ids",
        "options": undefined,
        "proto3Optional": false,
      }],
      "extension": [],
      "nestedType": [],
      "enumType": [],
      "extensionRange": [],
      "oneofDecl": [],
      "options": undefined,
      "reservedRange": [],
      "reservedName": [],
    }],
    "enumType": [],
    "service": [{
      "name": "Service",
      "method": [{
        "name": "Read",
        "inputType": ".io.restorecommerce.resourcebase.ReadRequest",
        "outputType": ".io.restorecommerce.invoice.InvoiceListResponse",
        "options": { "deprecated": false, "idempotencyLevel": 0, "uninterpretedOption": [] },
        "clientStreaming": false,
        "serverStreaming": false,
      }, {
        "name": "Create",
        "inputType": ".io.restorecommerce.invoice.InvoiceList",
        "outputType": ".io.restorecommerce.invoice.InvoiceListResponse",
        "options": undefined,
        "clientStreaming": false,
        "serverStreaming": false,
      }, {
        "name": "Delete",
        "inputType": ".io.restorecommerce.resourcebase.DeleteRequest",
        "outputType": ".io.restorecommerce.resourcebase.DeleteResponse",
        "options": undefined,
        "clientStreaming": false,
        "serverStreaming": false,
      }, {
        "name": "Update",
        "inputType": ".io.restorecommerce.invoice.InvoiceList",
        "outputType": ".io.restorecommerce.invoice.InvoiceListResponse",
        "options": undefined,
        "clientStreaming": false,
        "serverStreaming": false,
      }, {
        "name": "Upsert",
        "inputType": ".io.restorecommerce.invoice.InvoiceList",
        "outputType": ".io.restorecommerce.invoice.InvoiceListResponse",
        "options": undefined,
        "clientStreaming": false,
        "serverStreaming": false,
      }, {
        "name": "GenerateInvoiceNumber",
        "inputType": ".io.restorecommerce.invoice.RequestInvoiceNumber",
        "outputType": ".io.restorecommerce.invoice.InvoiceNumberResponse",
        "options": undefined,
        "clientStreaming": false,
        "serverStreaming": false,
      }],
      "options": { "deprecated": false, "uninterpretedOption": [] },
    }],
    "extension": [],
    "options": undefined,
    "sourceCodeInfo": {
      "location": [{
        "path": [3, 7],
        "span": [13, 0, 43],
        "leadingComments": " Used by resolvers\n",
        "trailingComments": "",
        "leadingDetachedComments": [],
      }, {
        "path": [6, 0],
        "span": [18, 0, 29, 1],
        "leadingComments": "\n Microservice definition.\n",
        "trailingComments": "",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 3],
        "span": [47, 0, 51, 1],
        "leadingComments": "\n For multiple invoices\n",
        "trailingComments": "",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 6],
        "span": [67, 0, 87, 1],
        "leadingComments": "\n A simple invoice.\n",
        "trailingComments": "",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 6, 2, 7],
        "span": [83, 2, 33],
        "leadingComments": "",
        "trailingComments": " difference between net and total\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 7],
        "span": [92, 0, 94, 1],
        "leadingComments": "*\n List of Invoice Positions data\n",
        "trailingComments": "",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 8, 2, 0],
        "span": [97, 2, 25],
        "leadingComments": "",
        "trailingComments": " contract or customer identifier\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 8, 2, 8],
        "span": [105, 2, 33],
        "leadingComments": "",
        "trailingComments": " optional invoice number if not it will be generated by service\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 8, 2, 9],
        "span": [106, 2, 33],
        "leadingComments": "",
        "trailingComments": " value performance from date\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 8, 2, 10],
        "span": [107, 2, 31],
        "leadingComments": "",
        "trailingComments": " value performance to date\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 9, 2, 0],
        "span": [111, 2, 25],
        "leadingComments": "",
        "trailingComments": " customer id - used to store the resource in DB\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 9, 2, 1],
        "span": [112, 2, 38],
        "leadingComments": "",
        "trailingComments": " displayed in invoice\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 12, 2, 5],
        "span": [142, 2, 42],
        "leadingComments": "",
        "trailingComments": " if there is any contract associated with product\n",
        "leadingDetachedComments": [],
      }, {
        "path": [4, 14, 2, 0],
        "span": [151, 2, 26],
        "leadingComments": "",
        "trailingComments": " list of id referring to contract_ids or customer_ids\n",
        "leadingDetachedComments": [],
      }],
    },
    "syntax": "proto3",
  }),
  references: {
    ".io.restorecommerce.invoice.RequestInvoiceNumber": RequestInvoiceNumber,
    ".io.restorecommerce.invoice.InvoiceNumberResponse": InvoiceNumberResponse,
    ".io.restorecommerce.invoice.Deleted": Deleted,
    ".io.restorecommerce.invoice.InvoiceList": InvoiceList,
    ".io.restorecommerce.invoice.InvoiceListResponse": InvoiceListResponse,
    ".io.restorecommerce.invoice.InvoiceResponse": InvoiceResponse,
    ".io.restorecommerce.invoice.Invoice": Invoice,
    ".io.restorecommerce.invoice.InvoicesPositionsData": InvoicesPositionsData,
    ".io.restorecommerce.invoice.InvoicePositions": InvoicePositions,
    ".io.restorecommerce.invoice.RecipientCustomer": RecipientCustomer,
    ".io.restorecommerce.invoice.BillingAddress": BillingAddress,
    ".io.restorecommerce.invoice.InvoicePosition": InvoicePosition,
    ".io.restorecommerce.invoice.InvoiceRow": InvoiceRow,
    ".io.restorecommerce.invoice.InvoicePrice": InvoicePrice,
    ".io.restorecommerce.invoice.TriggerInvoices": TriggerInvoices,
  },
  dependencies: [
    protoMetadata1,
    protoMetadata2,
    protoMetadata3,
    protoMetadata4,
    protoMetadata5,
    protoMetadata6,
    protoMetadata7,
    protoMetadata8,
  ],
  options: {
    messages: {
      "Invoice": {
        fields: {
          "customer_id": {
            "resolver": Resolver.decode(
              Buffer.from(
                "CiUuaW8ucmVzdG9yZWNvbW1lcmNlLmN1c3RvbWVyLkN1c3RvbWVyEghyZXNvdXJjZRoIY3VzdG9tZXIiBFJlYWQqCGN1c3RvbWVy",
                "base64",
              ),
            ),
          },
        },
      },
    },
    services: { "Service": { options: { "service_name": "invoice" }, methods: { "Read": { "is_query": true } } } },
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
